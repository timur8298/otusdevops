stages:
  - deploy
  - notify

deploy:
  stage: deploy
  image: alpine/k8s:1.27.1
  variables:
    MONITORING_NS: monitoring
  only:
    - triggers
    - branches
  script:
    - kubectl config get-contexts
    - kubectl config use-context $(kubectl config get-contexts | tail -n +2 | head -n 1 | awk '{print $1};')
    - helm ls
    - kubectl describe ns $MONITORING_NS || kubectl create ns $MONITORING_NS
    - helm upgrade --install monitoring ./prometheus -n $MONITORING_NS -f ./values.yaml --set "domain=grafana.$PROJECT_DOMAIN" --set "kube-prometheus-stack.alertmanager.config.receivers[0].telegram_configs[0].bot_token=$TELEGRAM_BOT_TOKEN"
    - kubectl describe configmap grafana-se -n $MONITORING_NS || kubectl create configmap grafana-se -n $MONITORING_NS --from-file=grafana-se.json
    - kubectl label configmap grafana-se -n $MONITORING_NS grafana_dashboard=1
    - |
      (kubectl get cm -n kube-system kube-proxy-config -o yaml | sed "s#metricsBindAddress: \"\"#metricsBindAddress: 0\.0\.0\.0\:10249#g" | kubectl apply -f -)
    - kubectl delete pod -l k8s-app=kube-proxy -n kube-system
    - sh ci-notify.sh ✅

notify_error:
  stage: notify
  image: alpine/k8s:1.27.1
  script:
    - sh ci-notify.sh ❌
  when: on_failure
